version: '3.8'
services:
  etcd:
    image: bitnami/etcd:3
    container_name: etcd
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - "2379:2379"
    networks:
      - pg-network
    restart: always

  patroni1:
    image: registry.opensource.zalan.do/acid/patroni:2.1.1
    container_name: patroni1
    environment:
      PATRONI_SCOPE: pg-cluster
      PATRONI_NAME: patroni1
      PATRONI_ETCD_HOSTS: "'etcd:2379'"
      PATRONI_RESTAPI_USERNAME: admin
      PATRONI_RESTAPI_PASSWORD: admin
      PATRONI_ADMIN_OPTIONS: createrole,createdb
      PATRONI_POSTGRESQL_CONNECT_ADDRESS: patroni1:5432
      PATRONI_POSTGRESQL_LISTEN: 0.0.0.0:5432
      PATRONI_RESTAPI_LISTEN: 0.0.0.0:8008
      PATRONI_POSTGRESQL_DATA_DIR: /data/patroni
      PATRONI_REPLICATION_USERNAME: replicator
      PATRONI_REPLICATION_PASSWORD: replpass
      PATRONI_SUPERUSER_USERNAME: postgres
      PATRONI_SUPERUSER_PASSWORD: postgres
    volumes:
      - patroni1-data:/data
    ports:
      - "5432:5432"
      - "8008:8008"
    networks:
      - pg-network
    depends_on:
      - etcd
    restart: always

  patroni2:
    image: registry.opensource.zalan.do/acid/patroni:2.1.1
    container_name: patroni2
    environment:
      PATRONI_SCOPE: pg-cluster
      PATRONI_NAME: patroni2
      PATRONI_ETCD_HOSTS: "'etcd:2379'"
      PATRONI_RESTAPI_USERNAME: admin
      PATRONI_RESTAPI_PASSWORD: admin
      PATRONI_ADMIN_OPTIONS: createrole,createdb
      PATRONI_POSTGRESQL_CONNECT_ADDRESS: patroni2:5432
      PATRONI_POSTGRESQL_LISTEN: 0.0.0.0:5432
      PATRONI_RESTAPI_LISTEN: 0.0.0.0:8008
      PATRONI_POSTGRESQL_DATA_DIR: /data/patroni
      PATRONI_REPLICATION_USERNAME: replicator
      PATRONI_REPLICATION_PASSWORD: replpass
      PATRONI_SUPERUSER_USERNAME: postgres
      PATRONI_SUPERUSER_PASSWORD: postgres
    volumes:
      - patroni2-data:/data
    ports:
      - "5433:5432"
      - "8009:8008"
    networks:
      - pg-network
    depends_on:
      - etcd
    restart: always

  patroni3:
    image: registry.opensource.zalan.do/acid/patroni:2.1.1
    container_name: patroni3
    environment:
      PATRONI_SCOPE: pg-cluster
      PATRONI_NAME: patroni3
      PATRONI_ETCD_HOSTS: "'etcd:2379'"
      PATRONI_RESTAPI_USERNAME: admin
      PATRONI_RESTAPI_PASSWORD: admin
      PATRONI_ADMIN_OPTIONS: createrole,createdb
      PATRONI_POSTGRESQL_CONNECT_ADDRESS: patroni3:5432
      PATRONI_POSTGRESQL_LISTEN: 0.0.0.0:5432
      PATRONI_RESTAPI_LISTEN: 0.0.0.0:8008
      PATRONI_POSTGRESQL_DATA_DIR: /data/patroni
      PATRONI_REPLICATION_USERNAME: replicator
      PATRONI_REPLICATION_PASSWORD: replpass
      PATRONI_SUPERUSER_USERNAME: postgres
      PATRONI_SUPERUSER_PASSWORD: postgres
    volumes:
      - patroni3-data:/data
    ports:
      - "5434:5432"
      - "8010:8008"
    networks:
      - pg-network
    depends_on:
      - etcd
    restart: always

  haproxy:
    image: haproxy:2.4
    container_name: haproxy
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "5000:5000"  # PostgreSQL 读写端口
      - "5001:5001"  # PostgreSQL 只读端口
      - "7000:7000"  # HAProxy 状态页面
    networks:
      - pg-network
    depends_on:
      - patroni1
      - patroni2
      - patroni3
    restart: always

networks:
  pg-network:
    driver: bridge

volumes:
  patroni1-data:
  patroni2-data:
  patroni3-data: